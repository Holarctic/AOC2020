import time
from parse import parse
from itertools import product

def part1(input):
  def around(input, coords):
    mask = [(-1, -1, -1, -1), (-1, -1, -1, 0), (-1, -1, -1, 1), (-1, -1, 0, -1), (-1, -1, 0, 0), 
(-1, -1, 0, 1), (-1, -1, 1, -1), (-1, -1, 1, 0), (-1, -1, 1, 1), (-1, 0, -1, -1), 
(-1, 0, -1, 0), (-1, 0, -1, 1), (-1, 0, 0, -1), (-1, 0, 0, 0), (-1, 0, 0, 1), 
(-1, 0, 1, -1), (-1, 0, 1, 0), (-1, 0, 1, 1), (-1, 1, -1, -1), (-1, 1, -1, 0), 
(-1, 1, -1, 1), (-1, 1, 0, -1), (-1, 1, 0, 0), (-1, 1, 0, 1), (-1, 1, 1, -1), 
(-1, 1, 1, 0), (-1, 1, 1, 1), (0, -1, -1, -1), (0, -1, -1, 0), (0, -1, -1, 1), 
(0, -1, 0, -1), (0, -1, 0, 0), (0, -1, 0, 1), (0, -1, 1, -1), (0, -1, 1, 0), 
(0, -1, 1, 1), (0, 0, -1, -1), (0, 0, -1, 0), (0, 0, -1, 1), (0, 0, 0, -1), 
(0, 0, 0, 1), (0, 0, 1, -1), (0, 0, 1, 0), (0, 0, 1, 1), (0, 1, -1, -1), (0, 1, -1, 0), 
(0, 1, -1, 1), (0, 1, 0, -1), (0, 1, 0, 0), (0, 1, 0, 1), (0, 1, 1, -1), (0, 1, 1, 0),
(0, 1, 1, 1), (1, -1, -1, -1), (1, -1, -1, 0), (1, -1, -1, 1), (1, -1, 0, -1), 
(1, -1, 0, 0), (1, -1, 0, 1), (1, -1, 1, -1), (1, -1, 1, 0), (1, -1, 1, 1), 
(1, 0, -1, -1), (1, 0, -1, 0), (1, 0, -1, 1), (1, 0, 0, -1), (1, 0, 0, 0), (1, 0, 0, 1), 
(1, 0, 1, -1), (1, 0, 1, 0), (1, 0, 1, 1), (1, 1, -1, -1), (1, 1, -1, 0), (1, 1, -1, 1), 
(1, 1, 0, -1), (1, 1, 0, 0), (1, 1, 0, 1), (1, 1, 1, -1), (1, 1, 1, 0), (1, 1, 1, 1)]
    active=0
    for x in mask:
      active += input.get(tuple(map(sum, zip(coords, x))), 0)
    return active
  
  for i in range(6):
    temp = {}
    # print(i)
    for coords in product(range(-i-1, 9+i), range(-i-1, 9+i), range(-i-1, i+2)):
      arr = around(input, coords)
      # if arr != 0:
      #   print(arr)
      if input.get(coords, 0) == 1 and 2 <= arr <= 3:
        temp[coords] = 1
      elif input.get(coords, 0) == 0 and arr == 3:
        temp[coords] = 1
    input = temp.copy()
    temp.clear()
  
  return len(input)


def part2(input):
  def around(input, coords):
    mask = [(-1, -1, -1, -1), (-1, -1, -1, 0), (-1, -1, -1, 1), (-1, -1, 0, -1), (-1, -1, 0, 0), 
(-1, -1, 0, 1), (-1, -1, 1, -1), (-1, -1, 1, 0), (-1, -1, 1, 1), (-1, 0, -1, -1), 
(-1, 0, -1, 0), (-1, 0, -1, 1), (-1, 0, 0, -1), (-1, 0, 0, 0), (-1, 0, 0, 1), 
(-1, 0, 1, -1), (-1, 0, 1, 0), (-1, 0, 1, 1), (-1, 1, -1, -1), (-1, 1, -1, 0), 
(-1, 1, -1, 1), (-1, 1, 0, -1), (-1, 1, 0, 0), (-1, 1, 0, 1), (-1, 1, 1, -1), 
(-1, 1, 1, 0), (-1, 1, 1, 1), (0, -1, -1, -1), (0, -1, -1, 0), (0, -1, -1, 1), 
(0, -1, 0, -1), (0, -1, 0, 0), (0, -1, 0, 1), (0, -1, 1, -1), (0, -1, 1, 0), 
(0, -1, 1, 1), (0, 0, -1, -1), (0, 0, -1, 0), (0, 0, -1, 1), (0, 0, 0, -1), 
(0, 0, 0, 1), (0, 0, 1, -1), (0, 0, 1, 0), (0, 0, 1, 1), (0, 1, -1, -1), (0, 1, -1, 0), 
(0, 1, -1, 1), (0, 1, 0, -1), (0, 1, 0, 0), (0, 1, 0, 1), (0, 1, 1, -1), (0, 1, 1, 0),
(0, 1, 1, 1), (1, -1, -1, -1), (1, -1, -1, 0), (1, -1, -1, 1), (1, -1, 0, -1), 
(1, -1, 0, 0), (1, -1, 0, 1), (1, -1, 1, -1), (1, -1, 1, 0), (1, -1, 1, 1), 
(1, 0, -1, -1), (1, 0, -1, 0), (1, 0, -1, 1), (1, 0, 0, -1), (1, 0, 0, 0), (1, 0, 0, 1), 
(1, 0, 1, -1), (1, 0, 1, 0), (1, 0, 1, 1), (1, 1, -1, -1), (1, 1, -1, 0), (1, 1, -1, 1), 
(1, 1, 0, -1), (1, 1, 0, 0), (1, 1, 0, 1), (1, 1, 1, -1), (1, 1, 1, 0), (1, 1, 1, 1)]
    active=0
    for x in mask:
      active += input.get(tuple(map(sum, zip(coords, x))), 0)
    return active
  
  for i in range(6):
    temp = {}
    # print(i)
    for coords in product(range(-i-1, 9+i), range(-i-1, 9+i), range(-i-1, i+2), range(-i-1, i+2)):
      arr = around(input, coords)
      # if arr != 0:
      #   print(arr)
      if input.get(coords, 0) == 1 and 2 <= arr <= 3:
        temp[coords] = 1
      elif input.get(coords, 0) == 0 and arr == 3:
        temp[coords] = 1
    input = temp.copy()
    temp.clear()
  
  return len(input)

def day16(input, day):
  print("Day", day, "part1: ", part1(input))
  print("Day", day, "part2: ", part2(input))

if __name__ == "__main__":
  day = 17
  test = False
  # test = True
  file = "day%d/input.txt" % day
  if test:
    file = "test.txt"
  fileInp = [line.strip() for line in open(file, "r").readlines()]
  input = {}
  for x, line in enumerate(fileInp):
    for y, value in enumerate(line):
      if value == "#":
        input[(x, y, 0, 0)] = 1 
  # print(input)
  # print(input[0])
  day16(input, day)