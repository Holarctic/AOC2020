prog = [["acc", -7, 0],
["acc", +2, 0],
["acc", +20, 0],
["acc", +14, 0],
["jmp", +191, 0],
["acc", +47, 0],
["nop", +339, 0],
["acc", +49, 0],
["jmp", +104, 0],
["jmp", +629, 0],
["jmp", +374, 0],
["acc", +24, 0],
["jmp", +220, 0],
["nop", +474, 0],
["acc", +25, 0],
["jmp", +340, 0],
["acc", +16, 0],
["acc", +3, 0],
["acc", +41, 0],
["jmp", +566, 0],
["jmp", +296, 0],
["acc", +15, 0],
["jmp", +452, 0],
["acc", +21, 0],
["jmp", +129, 0],
["acc", +10, 0],
["acc", -8, 0],
["acc", +39, 0],
["jmp", +396, 0],
["acc", +5, 0],
["acc", -4, 0],
["acc", +0, 0],
["jmp", +496, 0],
["nop", +181, 0],
["acc", +48, 0],
["acc", +7, 0],
["jmp", +1, 0],
["jmp", +370, 0],
["acc", +16, 0],
["acc", -18, 0],
["acc", +47, 0],
["acc", +48, 0],
["jmp", +99, 0],
["nop", +17, 0],
["acc", +25, 0],
["acc", -15, 0],
["jmp", +285, 0],
["nop", +545, 0],
["nop", +147, 0],
["nop", +479, 0],
["acc", -4, 0],
["jmp", +386, 0],
["acc", +36, 0],
["acc", -12, 0],
["jmp", +50, 0],
["acc", +37, 0],
["nop", +133, 0],
["acc", +11, 0],
["acc", +20, 0],
["jmp", +32, 0],
["jmp", +1, 0],
["nop", +210, 0],
["acc", -15, 0],
["acc", -6, 0],
["jmp", +446, 0],
["acc", +25, 0],
["acc", +1, 0],
["acc", +17, 0],
["acc", -4, 0],
["jmp", +355, 0],
["acc", -4, 0],
["jmp", +292, 0],
["acc", +16, 0],
["acc", +44, 0],
["acc", +26, 0],
["jmp", +157, 0],
["acc", -18, 0],
["acc", +15, 0],
["acc", -8, 0],
["acc", -3, 0],
["jmp", +46, 0],
["acc", +30, 0],
["acc", +16, 0],
["jmp", -7, 0],
["acc", +34, 0],
["jmp", +515, 0],
["acc", +11, 0],
["acc", -8, 0],
["acc", -9, 0],
["acc", -3, 0],
["jmp", +548, 0],
["jmp", +278, 0],
["nop", +332, 0],
["acc", -19, 0],
["acc", +49, 0],
["jmp", +536, 0],
["acc", -9, 0],
["acc", +46, 0],
["jmp", +124, 0],
["acc", +41, 0],
["acc", +47, 0],
["acc", -5, 0],
["acc", -13, 0],
["jmp", +41, 0],
["nop", +178, 0],
["acc", +12, 0],
["acc", +45, 0],
["jmp", +461, 0],
["acc", +37, 0],
["acc", +12, 0],
["acc", +38, 0],
["jmp", -68, 0],
["acc", -6, 0],
["nop", +494, 0],
["acc", -9, 0],
["jmp", -63, 0],
["acc", +42, 0],
["acc", +16, 0],
["acc", +30, 0],
["jmp", +70, 0],
["acc", +13, 0],
["jmp", +1, 0],
["acc", -18, 0],
["jmp", +528, 0],
["acc", +48, 0],
["jmp", +493, 0],
["nop", +402, 0],
["jmp", +381, 0],
["acc", -8, 0],
["jmp", +372, 0],
["acc", +20, 0],
["acc", +25, 0],
["jmp", +425, 0],
["acc", -10, 0],
["jmp", +510, 0],
["jmp", +439, 0],
["nop", +78, 0],
["acc", +36, 0],
["acc", +7, 0],
["nop", +281, 0],
["jmp", +504, 0],
["jmp", -108, 0],
["acc", +40, 0],
["jmp", -122, 0],
["acc", +23, 0],
["acc", -2, 0],
["acc", +7, 0],
["jmp", +370, 0],
["acc", +25, 0],
["nop", -5, 0],
["acc", +33, 0],
["acc", +37, 0],
["jmp", +70, 0],
["acc", -6, 0],
["nop", +336, 0],
["jmp", +34, 0],
["jmp", +1, 0],
["acc", -18, 0],
["jmp", +473, 0],
["jmp", +1, 0],
["acc", +20, 0],
["acc", +4, 0],
["acc", +25, 0],
["jmp", -87, 0],
["acc", -12, 0],
["acc", +47, 0],
["acc", +49, 0],
["jmp", +323, 0],
["jmp", +1, 0],
["jmp", +1, 0],
["jmp", +167, 0],
["acc", -10, 0],
["acc", +45, 0],
["jmp", +355, 0],
["acc", +32, 0],
["acc", +38, 0],
["acc", +2, 0],
["jmp", -93, 0],
["acc", +8, 0],
["acc", +20, 0],
["acc", +4, 0],
["acc", -1, 0],
["jmp", +108, 0],
["nop", +164, 0],
["acc", +41, 0],
["jmp", +440, 0],
["acc", -16, 0],
["acc", +47, 0],
["jmp", +355, 0],
["acc", -13, 0],
["acc", +29, 0],
["acc", +50, 0],
["jmp", -101, 0],
["acc", -8, 0],
["jmp", +316, 0],
["acc", +27, 0],
["acc", +31, 0],
["nop", -29, 0],
["jmp", +1, 0],
["jmp", +250, 0],
["acc", +12, 0],
["acc", -13, 0],
["jmp", +73, 0],
["jmp", +72, 0],
["acc", +36, 0],
["acc", +44, 0],
["jmp", +1, 0],
["jmp", -33, 0],
["acc", -18, 0],
["acc", +16, 0],
["acc", -8, 0],
["acc", +6, 0],
["jmp", +104, 0],
["jmp", +295, 0],
["acc", +10, 0],
["nop", -80, 0],
["jmp", +74, 0],
["acc", -13, 0],
["jmp", +1, 0],
["acc", +22, 0],
["acc", +50, 0],
["jmp", +280, 0],
["jmp", +265, 0],
["jmp", +278, 0],
["acc", +46, 0],
["acc", -14, 0],
["acc", -17, 0],
["jmp", -19, 0],
["acc", +39, 0],
["acc", +31, 0],
["acc", -11, 0],
["jmp", +400, 0],
["jmp", +80, 0],
["acc", +0, 0],
["acc", +27, 0],
["nop", +209, 0],
["jmp", -184, 0],
["acc", +12, 0],
["acc", +21, 0],
["acc", +23, 0],
["jmp", +352, 0],
["acc", +29, 0],
["jmp", -5, 0],
["acc", +15, 0],
["acc", +7, 0],
["jmp", +6, 0],
["acc", +31, 0],
["acc", -5, 0],
["nop", +83, 0],
["acc", +31, 0],
["jmp", -239, 0],
["acc", +8, 0],
["acc", -2, 0],
["acc", +49, 0],
["acc", -12, 0],
["jmp", -52, 0],
["acc", -15, 0],
["acc", -14, 0],
["jmp", +126, 0],
["jmp", +385, 0],
["acc", +30, 0],
["acc", -5, 0],
["acc", +6, 0],
["jmp", -187, 0],
["acc", +39, 0],
["acc", +40, 0],
["acc", +0, 0],
["acc", +6, 0],
["jmp", +24, 0],
["acc", +20, 0],
["jmp", +131, 0],
["jmp", -127, 0],
["acc", +8, 0],
["acc", +30, 0],
["jmp", -265, 0],
["acc", -2, 0],
["jmp", -265, 0],
["acc", +22, 0],
["acc", -19, 0],
["acc", -9, 0],
["nop", +10, 0],
["jmp", +148, 0],
["acc", -14, 0],
["acc", +38, 0],
["acc", +50, 0],
["acc", -7, 0],
["jmp", +197, 0],
["acc", +11, 0],
["acc", +22, 0],
["jmp", +201, 0],
["jmp", -155, 0],
["jmp", -32, 0],
["acc", +48, 0],
["nop", -50, 0],
["jmp", -99, 0],
# ["nop", -5, 0],
["jmp", -5, 0],
["acc", +11, 0],
["acc", -18, 0],
["jmp", -186, 0],
["acc", +6, 0],
["acc", +43, 0],
["jmp", +159, 0],
["jmp", +249, 0],
["acc", +44, 0],
["acc", +29, 0],
["nop", +313, 0],
["acc", +23, 0],
["jmp", +311, 0],
["jmp", +152, 0],
["acc", +0, 0],
["acc", +41, 0],
["jmp", -251, 0],
["jmp", +102, 0],
["nop", -17, 0],
["nop", +176, 0],
["jmp", +40, 0],
["acc", +28, 0],
["jmp", -21, 0],
["acc", -4, 0],
["acc", -10, 0],
["acc", -19, 0],
["acc", -15, 0],
["jmp", +23, 0],
["nop", +144, 0],
["acc", +9, 0],
["acc", +18, 0],
["jmp", +141, 0],
["acc", -19, 0],
["acc", -10, 0],
["acc", +48, 0],
["jmp", -7, 0],
["acc", +46, 0],
["acc", -9, 0],
["jmp", -174, 0],
["acc", +30, 0],
["acc", +30, 0],
["jmp", -201, 0],
["acc", +34, 0],
["acc", +24, 0],
["acc", +37, 0],
["acc", +44, 0],
["jmp", -158, 0],
["acc", +4, 0],
["acc", +39, 0],
["jmp", -52, 0],
["jmp", -329, 0],
["jmp", +68, 0],
["acc", +25, 0],
["nop", -105, 0],
["acc", -15, 0],
["acc", +34, 0],
["jmp", -6, 0],
["jmp", +1, 0],
["acc", +1, 0],
["jmp", +163, 0],
["nop", -285, 0],
["acc", +8, 0],
["acc", +48, 0],
["jmp", +143, 0],
["acc", -3, 0],
["nop", -269, 0],
["acc", -16, 0],
["jmp", -310, 0],
["acc", -5, 0],
["jmp", -304, 0],
["acc", +45, 0],
["nop", -231, 0],
["jmp", +1, 0],
["jmp", +245, 0],
["nop", -243, 0],
["jmp", +187, 0],
["acc", -6, 0],
["acc", +7, 0],
["acc", +17, 0],
["acc", +6, 0],
["jmp", -111, 0],
["acc", +24, 0],
["acc", -10, 0],
["acc", +21, 0],
["jmp", -97, 0],
["jmp", +1, 0],
["acc", -12, 0],
["acc", +10, 0],
["jmp", +127, 0],
["acc", +0, 0],
["jmp", -211, 0],
["acc", -11, 0],
["acc", +36, 0],
["acc", +45, 0],
["acc", -19, 0],
["jmp", -182, 0],
["jmp", -366, 0],
["acc", +38, 0],
["acc", -11, 0],
["acc", +32, 0],
["jmp", -260, 0],
["acc", +6, 0],
["acc", +31, 0],
["jmp", +3, 0],
["acc", +5, 0],
["jmp", +101, 0],
["jmp", -64, 0],
["acc", +48, 0],
["acc", +5, 0],
["nop", +40, 0],
["acc", -13, 0],
["jmp", +95, 0],
["nop", +76, 0],
["acc", +44, 0],
["acc", +43, 0],
["acc", +43, 0],
["jmp", +196, 0],
["acc", +34, 0],
["jmp", +161, 0],
["acc", +5, 0],
["acc", +45, 0],
["acc", +7, 0],
["jmp", +20, 0],
["acc", +13, 0],
["jmp", -127, 0],
["acc", +5, 0],
["acc", +18, 0],
["jmp", -239, 0],
["jmp", -76, 0],
["nop", +214, 0],
["jmp", -284, 0],
["acc", +10, 0],
["acc", -8, 0],
["jmp", -81, 0],
["acc", +48, 0],
["acc", -3, 0],
["jmp", -55, 0],
["nop", -288, 0],
["acc", +37, 0],
["acc", +1, 0],
["acc", -12, 0],
["jmp", +1, 0],
["nop", +91, 0],
["acc", +20, 0],
["acc", +18, 0],
["jmp", +4, 0],
["acc", -7, 0],
["acc", -10, 0],
["jmp", -229, 0],
["nop", -230, 0],
["nop", +45, 0],
["acc", +37, 0],
["jmp", +127, 0],
["jmp", +69, 0],
["jmp", -153, 0],
["acc", -15, 0],
["acc", -19, 0],
["acc", +32, 0],
["jmp", -33, 0],
["nop", +164, 0],
["acc", +32, 0],
["jmp", -133, 0],
["acc", +20, 0],
["acc", -8, 0],
["jmp", +8, 0],
["acc", -11, 0],
["nop", +82, 0],
["acc", +7, 0],
["acc", +40, 0],
["jmp", +79, 0],
["acc", +0, 0],
["jmp", +159, 0],
["acc", +4, 0],
["acc", -8, 0],
["acc", +20, 0],
["nop", +143, 0],
["jmp", -351, 0],
["acc", -7, 0],
["jmp", +78, 0],
["acc", +0, 0],
["acc", +4, 0],
["jmp", +20, 0],
["jmp", -3, 0],
["acc", +2, 0],
["acc", +23, 0],
["jmp", -256, 0],
["acc", +33, 0],
["jmp", -473, 0],
["acc", +29, 0],
["acc", -13, 0],
["jmp", +77, 0],
["jmp", +158, 0],
["acc", -16, 0],
["jmp", -10, 0],
["jmp", -181, 0],
["jmp", -135, 0],
["nop", -95, 0],
["acc", +46, 0],
["acc", +39, 0],
["acc", -3, 0],
["jmp", -94, 0],
["jmp", -67, 0],
["acc", +49, 0],
["nop", -78, 0],
["nop", -9, 0],
["jmp", +107, 0],
["acc", -19, 0],
["acc", -1, 0],
["acc", +0, 0],
["acc", -4, 0],
["jmp", -189, 0],
["acc", +11, 0],
["jmp", -106, 0],
["jmp", -200, 0],
["jmp", +122, 0],
["acc", +8, 0],
["acc", +48, 0],
["acc", +15, 0],
["acc", +0, 0],
["jmp", -493, 0],
["acc", +13, 0],
["jmp", -8, 0],
["acc", +36, 0],
["acc", -10, 0],
["jmp", +1, 0],
["acc", +9, 0],
["jmp", +7, 0],
["jmp", +85, 0],
["acc", +22, 0],
["acc", -8, 0],
["nop", -124, 0],
["jmp", -517, 0],
["jmp", -338, 0],
["acc", +39, 0],
["nop", -438, 0],
["acc", -11, 0],
["jmp", +69, 0],
["acc", +8, 0],
["acc", +34, 0],
["acc", +34, 0],
["acc", -9, 0],
["jmp", -205, 0],
["nop", -528, 0],
["jmp", -495, 0],
["acc", +47, 0],
["acc", +40, 0],
["acc", +30, 0],
["jmp", -328, 0],
["acc", -2, 0],
["acc", +41, 0],
["jmp", -475, 0],
["acc", +42, 0],
["acc", +48, 0],
["acc", +2, 0],
["acc", +7, 0],
["jmp", -415, 0],
["nop", -249, 0],
["acc", -3, 0],
["jmp", +65, 0],
["acc", +23, 0],
["nop", -4, 0],
["jmp", -254, 0],
["acc", -12, 0],
["acc", +22, 0],
["acc", +27, 0],
["jmp", -176, 0],
["jmp", -408, 0],
["acc", -15, 0],
["acc", +14, 0],
["acc", +30, 0],
["acc", +0, 0],
["jmp", -363, 0],
["jmp", -426, 0],
["acc", +38, 0],
["nop", -425, 0],
["jmp", -440, 0],
["jmp", +1, 0],
["acc", +22, 0],
["jmp", -63, 0],
["jmp", -406, 0],
["nop", -445, 0],
["acc", -5, 0],
["acc", +34, 0],
["nop", -425, 0],
["jmp", +65, 0],
["acc", +33, 0],
["jmp", -91, 0],
["acc", -12, 0],
["jmp", +1, 0],
["jmp", -541, 0],
["nop", -489, 0],
["jmp", -490, 0],
["acc", +20, 0],
["acc", +20, 0],
["acc", +38, 0],
["acc", -18, 0],
["jmp", -548, 0],
["acc", +43, 0],
["acc", -7, 0],
["jmp", -351, 0],
["acc", -9, 0],
["acc", +50, 0],
["acc", +1, 0],
["nop", -587, 0],
["jmp", -230, 0],
["jmp", +1, 0],
["nop", +43, 0],
["jmp", -65, 0],
["acc", +31, 0],
["acc", +5, 0],
["acc", +1, 0],
["jmp", -105, 0],
["nop", -477, 0],
["acc", +21, 0],
["nop", -92, 0],
["jmp", -263, 0],
["acc", +28, 0],
["jmp", -265, 0],
["jmp", -311, 0],
["acc", +2, 0],
["acc", +23, 0],
["acc", +50, 0],
["jmp", -4, 0],
["acc", +42, 0],
["acc", +42, 0],
["acc", +31, 0],
["jmp", -167, 0],
["acc", +49, 0],
["acc", +46, 0],
["jmp", -73, 0],
["nop", -135, 0],
["acc", +43, 0],
["jmp", -236, 0],
["acc", -14, 0],
["acc", -3, 0],
["jmp", -406, 0],
["acc", +2, 0],
["acc", -3, 0],
["acc", +47, 0],
["jmp", -420, 0],
["acc", -8, 0],
["acc", +18, 0],
["jmp", -604, 0],
["jmp", -218, 0],
["acc", +37, 0],
["acc", -16, 0],
["nop", -278, 0],
["acc", -15, 0],
["jmp", -214, 0],
["acc", -6, 0],
["acc", +18, 0],
["acc", +7, 0],
["acc", +0, 0],
["jmp", -252, 0],
["acc", +14, 0],
["jmp", -266, 0],
["acc", +27, 0],
["acc", -16, 0],
["nop", -533, 0],
["nop", -534, 0],
["jmp", +1, 0]]


# insts = ["nop", "acc", "jmp"]
acc =0
instruction = 0
executed = []

while True:
  if prog[instruction][2] == 1:
    print("got this far")
    break
  if instruction == len(prog)-1:
    print(acc)
    break
  if prog[instruction][0] == "nop":
    executed.append(instruction)
    prog[instruction][2] = 1 
    instruction = instruction+1
  elif prog[instruction][0] == "acc":
    executed.append(instruction)
    prog[instruction][2] = 1 
    acc = acc + prog[instruction][1]
    instruction = instruction+1
  elif prog[instruction][0] == "jmp":
    executed.append(instruction)
    prog[instruction][2] = 1 
    instruction = instruction + prog[instruction][1]

def program(input): 
  acc =0
  instruction = 0
  # executed = []
  while True:
    if input[instruction][2] == 1:
      # print(":(")
      return False
    if instruction >= len(input)-1:
      print("pog")
      print(acc)
      return True
    if input[instruction][0] == "nop":
      # executed.append(instruction)
      input[instruction][2] = 1 
      instruction = instruction+1
    elif input[instruction][0] == "acc":
      # executed.append(instruction)
      input[instruction][2] = 1 
      acc = acc + input[instruction][1]
      instruction = instruction+1
    elif input[instruction][0] == "jmp":
      # executed.append(instruction)
      input[instruction][2] = 1 
      instruction = instruction + input[instruction][1]
  
executed = [x for x in executed if prog[x][0] != "acc"]

for x in executed:
  if prog[x][0] == "jmp":
    prog[x][0] = "nop"
  elif prog[x][0] == "nop":
    prog[x][0] = "jmp"
  for i in range(len(prog)):
    prog[i][2] = 0
  if not program(prog):
    if prog[x][0] == "jmp":
      prog[x][0] = "nop"
    elif prog[x][0] == "nop":
      prog[x][0] = "jmp"
  else:
    break